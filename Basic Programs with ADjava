############Reverse the String###############
public static void main(String[]args){
      String str="Astrology";
     StringBuilder reversed=new StringBulder(str).reverse();
     Sysytem.out.println(reversed);
}
#################Check if String palindrome ####################

public static void main(String[]args){
      String str="Madam";
      String reversed=new StringBuilder(str).reverse().toString();
     System.out.println(str.equals(reversed);
    
}
#######################Fibonacci series########################


int n=10,num1=0,num2=1;
system.out.println(" "+num1+" "+num2);
for(int i=2;i<n;i++){
    int num3=num1+num2;
    num1=num2=num3;
This updates both num1 and num2 to the value of num3, preparing for the next iteration.
    sout(num3)
}
################## check if vowels or not@#############################
 String ant="anotomus";
        int vowels=0,consonents=0;
        for(char c:ant.toCharArray()){
            if("aeiouAEIOU".indexOf(c)!=-1){
                vowels++;
            }else if(Character.isLetter(c)){
                consonents++;
            }
        }
        System.out.println("vowels:"+vowels+"consonents:"+consonents);
if ("aeiouAEIOU".indexOf(c) != -1)

This line checks if the current letter (c) is a vowel.
"aeiouAEIOU" is a string that contains all vowels (both lowercase and uppercase).
indexOf(c) checks if the letter c is in the string "aeiouAEIOU".
If it finds the letter, it returns its position (which is not -1), meaning it's a vowel.
If it doesn't find the letter, it returns -1, meaning it's not a vowel.
vowels++;

If the letter c is a vowel, we increase the vowel count (vowels) by 1.
else if (Character.isLetter(c))

If the letter is not a vowel, we check if it's a valid alphabet letter using Character.isLetter(c).
If it's a letter, that means it's a consonant.
consonants++;

If the letter c is a consonant, we increase the consonant count (consonants) by 1.

########################### factorial ################################3
Scanner scan=new Scanner(System.in);
        System.out.println("enter the number:");
        int num=scan.nextInt();
        int fact=1;
        for(int l=1;l<num;l++){
            fact*=l;
            System.out.println(fact);
}
################### Sorting an Array in ascending order##############################
 Scanner sc=new Scanner(System.in);
        System.out.println("enter the size:");
        int size=sc.nextInt();
        int arr[]=new int[size];
        System.out.println("enter "+size+" elements");
        for(int i=0;i<size;i++){
            arr[i]=sc.nextInt();
        }

        Arrays.sort(arr);
        System.out.println(Arrays.toString(arr));

####################### Sorting Array in decesding order ################################

 public static void reverse(int[] array)
    {
        // Length of the array
        int n = array.length;

        // Swapping the first half elements 
        // With last Half Elements
        for (int i = 0; i < n / 2; i++) {

            // Storing the first half elements temporarily
            int temp = array[i];

            // Assigning the first half
              // to the last half
            array[i] = array[n - i - 1];

            // Assigning the last half
            // to the first half
            array[n - i - 1] = temp;
        }
    }
}
################### agin AD method for desceding sortinng######################
   Scanner scan=new Scanner(System.in);
        System.out.println("enter the size of the arr:");
        int size=scan.nextInt();
        System.out.println("eneter the "+size+"element:");
             Integer [] array=new Integer[size];


        // Sorting the array in descending order
                Arrays.sort(array, Collections.reverseOrder());

                // Printing the elements
                System.out.println(Arrays.toString(array));
            }
        }

